Generated 24 tests
Test 1 = gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Norway>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 2 = gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Norway>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Norway>); gp.Win(<Scotland>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 3 = gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Scotland>); gp.Win(<Morocco>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 4 = gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Morocco>); gp.Win(<Scotland>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 5 = gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Norway>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Norway>); gp.Win(<Morocco>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 6 = gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Norway>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Brazil>, PASSED]
Test 7 = gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Norway>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 8 = gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Norway>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Norway>); gp.Win(<Scotland>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 9 = gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Scotland>); gp.Win(<Brazil>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 10 = gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Brazil>); gp.Win(<Scotland>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 11 = gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Norway>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Norway>); gp.Win(<Brazil>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 12 = gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Norway>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Morocco>, PASSED]
Test 13 = gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Scotland>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Morocco>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 14 = gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Morocco>); gp.Win(<Brazil>, <Scotland>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Scotland>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 15 = gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Scotland>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Brazil>, <Scotland>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 16 = gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Brazil>); gp.Win(<Morocco>, <Scotland>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Scotland>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 17 = gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Morocco>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Brazil>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 18 = gp.Win(<Norway>, <Scotland>); gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Brazil>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Morocco>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Norway>, PASSED]
Test 19 = gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Norway>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Brazil>, <Norway>); gp.Win(<Morocco>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]
Test 20 = gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Brazil>, <Norway>); gp.Win(<Brazil>, <Morocco>); gp.Win(<Norway>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]
Test 21 = gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Norway>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Morocco>, <Norway>); gp.Win(<Brazil>, <Norway>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]
Test 22 = gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Morocco>, <Norway>); gp.Win(<Morocco>, <Brazil>); gp.Win(<Norway>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]
Test 23 = gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Norway>, <Brazil>); gp.Win(<Norway>, <Morocco>); gp.Win(<Brazil>, <Morocco>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]
Test 24 = gp.Win(<Scotland>, <Norway>); gp.Win(<Scotland>, <Morocco>); gp.Win(<Scotland>, <Brazil>); gp.Win(<Norway>, <Morocco>); gp.Win(<Norway>, <Brazil>); gp.Win(<Morocco>, <Brazil>); gp.GroupWinner_cases(<A>)
Result = [(), (), (), (), (), (), <Scotland>, PASSED]