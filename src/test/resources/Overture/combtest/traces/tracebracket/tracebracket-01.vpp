class Stack

  instance variables
    stack : seq of int := [];

  operations

    public
    Reset : () ==> ()
    Reset () ==
      stack := [];

    public
    Pop : () ==> int
    Pop() ==
      def res = hd stack in
        (stack := tl stack;
         return res)
    pre stack <> []
    post stack~ = [RESULT]^stack;

    public Push: int ==> ()
    Push(elem) ==
      stack := stack ^[elem];

    public
    Top : () ==> int
    Top() ==
      return (hd stack);

 
end Stack
class UseStack

instance variables

  s : Stack := new Stack();

traces

  PushBeforePop : let x in set {1,3}
                  in
                    let y in set {3,8}
                    in
                      (s.Push(x); let z = 6 in (s.Push(y) ; s.Push(z)))
 
end UseStack