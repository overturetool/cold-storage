-- All expressions are true, one per line

1 + 1 = 2
1.0 + 1.0 = 2
1.2 + 3.4 = 4.6
true
not false
true and true
not (true and false)
true <=> true and false <=> false
not (true => false)
true => true
false => true
false => false
true or false
false or true
true or true
not (false or false)
{<France> |-> 9, <Denmark> |-> 4, <SouthAfrica> |-> 2, <SaudiArabia> |-> 1} comp {"France" |-> <France>} = {"France" |-> 9}
{1,2} <-: {1|->11, 2|->22, 3|->33, 4|->44} = {3|->33, 4|->44}
{1,2} <: {1|->11, 2|->22, 3|->33, 4|->44} = {1|->11, 2|->22} 
{1|->11, 2|->22, 3|->33, 4|->44} :-> {33,44} = {1|->11, 2|->22} 
{1|->11, 2|->22, 3|->33, 4|->44} :> {33,44} = {3|->33, 4|->44}
1 in set {1,2,3}
{1|->11, 2|->22} munion {3|->33, 4|->44} = {1|->11, 2|->22, 3|->33, 4|->44}
123 <> 456
123 not in set {1,2,3,4}
10 div 3 = 3
9/3 = 3
100 > 50
100 >= 100
50 < 100
50 <= 50
10 rem 3 = 1
-10 rem 3 = -1	-- NB rem takes the sign of the LHS
10 rem -3 = 1
10 mod 3 = 1
-10 mod 3 = 2
10 mod -3 = -2
10 * 10 = 100
10 + 10 = 20
10 - 10 = 0
10 / 10 = 1
{1|->11, 2|->22, 3|->33, 4|->44} ++ {1|->99} = {1|->99, 2|->22, 3|->33, 4|->44}
[1,2,3,4,5] ++ {1|->11, 2|->22} = [11,22,3,4,5]
{1,2,3} psubset {1,2,3,4}
not {1,2,3} psubset {1,2,3}
{1,2,3} subset {1,2,3}
[1,2] ^ [3,4] = [1,2,3,4]
{1,2,3} \ {2,3} = {1}
{1,2,3,4} inter {1,3,5,7} = {1,3}
{1,2} union {2,3,4} = {1,2,3,4}
{1 |-> 2, 2 |-> 3, 3 |-> 4, 4 |-> 1} ** 3 = {1 |-> 4, 2 |-> 1, 3 |-> 2, 4 |-> 3}
cases 1: 1->11, 2->22, 3->33 end = 11
cases 0: 1->11, 2->22, 3->33, others->99 end = 99
(if 1 > 2 then 2 else 1) = 1
(if 2 > 1 then 2 else 1) = 2
exists1 x in set {1,2,3,4} & x < 2
(exists1 x in set {1,2,3,4} & x < 3) = false
exists x in set {1,2,3,4} & x < 3
forall x in set {1,2,3,4} & x < 10
not forall x in set {1,2,3,4} & x < 2
(iota x in set {1,3,5,9} & x < 3) = 1
is_nat1(1)
not is_nat1(0)
is_nat(0)
not is_nat(-1)
is_int(-1)
not is_int(1.23)
is_real(1.23)
is_bool(true)
not is_bool(1)
is_char('x')
not is_char(1)
is_(1, int)
is_(0, nat)
not is_(0, nat1)
not is_(-1, nat)
(lambda x:int & x+1)(1) = 2
let x in set {1,2,3,4} be st x < 3 in x in set {1,2}
(let x = 123, y = 456 in x + y) = 579
let f: int->int f(x) == x + 1 in f(2) = 3
{x |-> x*x | x in set {1,2,3,4} & x mod 2 = 0} = {2|->4, 4|->16}
{a |-> b | a in set {1,2,3}, b in set {}} = {|->}
{1|->11, 2|->22, 3|->33} = {3|->33, 2|->22, 1|->11}
<quote> = <quote>
[x*x | x in set {1,2,3,4} & x mod 2 = 0] = [4, 16]
[1,2,3,4] = [1,2,3,4]
elems [1,2,3,4] = {1,2,3,4}
{x*x | x in set {1,2,3,4} & x mod 2 = 0} = {4, 16}
{a | a in set {1,2,3}, (1) in set {}} = {}
{a+b | a in set {1,2,3}, b in set {}} = {}
{1, ..., 10} = {1,2,3,4,5,6,7,8,9,10}
[1,2,3,4,5](2,...,4) = [2,3,4]
{1|->11, 2|->22, 3|->33}(2) = 22
mk_(1,2,3).#2 = 2
mk_(1,2,3) <> mk_(1,2,9)
mk_(1,2,3) = mk_(1,2,3)
abs(-1) = 1
abs(1) = 1
abs(-1.23) = 1.23
card {1,2,3} = 3
conc [[1,2,3], [4,5,6], [7]] = [1,2,3,4,5,6,7]
dinter {{1,2,3,4,5}, {2,3,4,5,6}, {3,4,5,6,7}} = {3,4,5}
merge {{1|->11}, {2|->22}, {3|->33}} = {1|->11, 2|->22, 3|->33}
dunion {{1,2,3,4,5}, {2,3,4,5,6}, {3,4,5,6,7}} = {1,2,3,4,5,6,7}
floor 1.23 = 1
floor -1.23 = -2
hd [1,2,3] = 1
inds [11,22,33,44] = {1,2,3,4}
inverse {1|->2, 2|->3, 3|->4, 4|->1} = {2|->1, 3|->2, 4|->3, 1|->4}
len [1,2,3,4] = 4
dom {1|->2, 2|->3, 3|->4, 4|->1} = {1,2,3,4}
rng {1|->11, 2|->22, 3|->33} = {11,22,33}
power {1,2,3} = {{}, {1}, {2}, {3}, {1,2}, {2,3}, {1,3}, {1,2,3}}
tl [1,2,3,4] = [2,3,4]
+123 = 123
+123.45 = 123.45
